/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "greeterSubAddresses",
    outputs: [
      {
        internalType: "contract GreeterSub",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "testCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_subName",
        type: "string",
      },
    ],
    name: "testCreateSubContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "testDelegateCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "testERC1155TransferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "testERC1155TransferSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "testERC20Transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "testERC20TransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "numTokens",
        type: "uint256",
      },
    ],
    name: "testERC777Sent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "testStaticCall",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bd5806100206000396000f3fe608060405260043610620000b65760003560e01c806385fe68d8116200006d57806385fe68d814620001d7578063a29d811c1462000205578063be2ef1cc1462000233578063c3ffae731462000261578063cc467aae146200028f578063e21f37ce14620002d357620000b6565b80632a4c5fae14620000bb578063368b877214620000ff5780633dcc4c56146200012d57806359c75ada146200015b5780636587cf6f146200017b5780637e3d9f1414620001a9575b600080fd5b348015620000c857600080fd5b50620000e76004803603810190620000e1919062000b52565b62000303565b604051620000f6919062000f47565b60405180910390f35b3480156200010c57600080fd5b506200012b600480360381019062000125919062000c2c565b620003d6565b005b3480156200013a57600080fd5b5062000159600480360381019062000153919062000beb565b620003f2565b005b62000179600480360381019062000173919062000baa565b6200045d565b005b3480156200018857600080fd5b50620001a76004803603810190620001a1919062000beb565b62000559565b005b348015620001b657600080fd5b50620001d56004803603810190620001cf919062000beb565b620005c4565b005b348015620001e457600080fd5b50620002036004803603810190620001fd919062000beb565b62000646565b005b3480156200021257600080fd5b506200023160048036038101906200022b919062000c2c565b620006cb565b005b3480156200024057600080fd5b506200025f600480360381019062000259919062000beb565b6200076f565b005b3480156200026e57600080fd5b506200028d600480360381019062000287919062000beb565b620007f6565b005b3480156200029c57600080fd5b50620002bb6004803603810190620002b5919062000c71565b620008f0565b604051620002ca919062000f9f565b60405180910390f35b348015620002e057600080fd5b50620002eb62000930565b604051620002fa919062000fe9565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff166040516200032d9062000f30565b600060405180830381855afa9150503d80600081146200036a576040519150601f19603f3d011682016040523d82523d6000602084013e6200036f565b606091505b509150915081620003b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ae9062001051565b60405180910390fd5b80806020019051810190620003cd919062000b7e565b92505050919050565b8060009080519060200190620003ee929190620009c6565b5050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000451919062001073565b60405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff167fd5dcf1279e7fe8f287395a49a4c070a4bdb09829182254c75f34d52561cce03983604051602001620004ab92919062000ee7565b604051602081830303815290604052604051620004c9919062000f17565b6000604051808303816000865af19150503d806000811462000508576040519150601f19603f3d011682016040523d82523d6000602084013e6200050d565b606091505b505090508062000554576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200054b906200100d565b60405180910390fd5b505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005b8919062001073565b60405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987846040516200063a919062001090565b60405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62600085604051620006bf92919062000fbc565b60405180910390a45050565b600081604051620006dc9062000a57565b620006e8919062000fe9565b604051809103906000f08015801562000705573d6000803e3d6000fd5b5090506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60608273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8485604051620007e992919062000f64565b60405180910390a4505050565b60008273ffffffffffffffffffffffffffffffffffffffff167fd5dcf1279e7fe8f287395a49a4c070a4bdb09829182254c75f34d52561cce039836040516020016200084492919062000ee7565b60405160208183030381529060405260405162000862919062000f17565b600060405180830381855af49150503d80600081146200089f576040519150601f19603f3d011682016040523d82523d6000602084013e620008a4565b606091505b5050905080620008eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008e2906200102f565b60405180910390fd5b505050565b600181815481106200090157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080546200093f90620012b1565b80601f01602080910402602001604051908101604052809291908181526020018280546200096d90620012b1565b8015620009be5780601f106200099257610100808354040283529160200191620009be565b820191906000526020600020905b815481529060010190602001808311620009a057829003601f168201915b505050505081565b828054620009d490620012b1565b90600052602060002090601f016020900481019282620009f8576000855562000a44565b82601f1062000a1357805160ff191683800117855562000a44565b8280016001018555821562000a44579182015b8281111562000a4357825182559160200191906001019062000a26565b5b50905062000a53919062000a65565b5090565b61070a806200149683390190565b5b8082111562000a8057600081600090555060010162000a66565b5090565b600062000a9b62000a958462001100565b620010d7565b90508281526020810184848401111562000ab457600080fd5b62000ac18482856200126c565b509392505050565b60008135905062000ada8162001447565b92915050565b60008135905062000af18162001461565b92915050565b60008151905062000b088162001461565b92915050565b600082601f83011262000b2057600080fd5b813562000b3284826020860162000a84565b91505092915050565b60008135905062000b4c816200147b565b92915050565b60006020828403121562000b6557600080fd5b600062000b758482850162000ac9565b91505092915050565b60006020828403121562000b9157600080fd5b600062000ba18482850162000af7565b91505092915050565b6000806040838503121562000bbe57600080fd5b600062000bce8582860162000ae0565b925050602062000be18582860162000b3b565b9150509250929050565b6000806040838503121562000bff57600080fd5b600062000c0f8582860162000ac9565b925050602062000c228582860162000b3b565b9150509250929050565b60006020828403121562000c3f57600080fd5b600082013567ffffffffffffffff81111562000c5a57600080fd5b62000c688482850162000b0e565b91505092915050565b60006020828403121562000c8457600080fd5b600062000c948482850162000b3b565b91505092915050565b600062000cab838362000eaa565b60208301905092915050565b62000cc281620011b2565b82525050565b600062000cd58262001146565b62000ce1818562001174565b935062000cee8362001136565b8060005b8381101562000d2557815162000d09888262000c9d565b975062000d168362001167565b92505060018101905062000cf2565b5085935050505092915050565b62000d4762000d4182620011da565b6200131d565b82525050565b600062000d5a8262001151565b62000d66818562001196565b935062000d788185602086016200127b565b80840191505092915050565b62000d8f8162001230565b82525050565b62000da08162001258565b82525050565b600062000db3826200115c565b62000dbf8185620011a1565b935062000dd18185602086016200127b565b62000ddc816200138f565b840191505092915050565b600062000df6600783620011a1565b915062000e0382620013a0565b602082019050919050565b600062000e1d600f83620011a1565b915062000e2a82620013c9565b602082019050919050565b600062000e4460008362001185565b915062000e5182620013f2565b600082019050919050565b600062000e6b60048362001196565b915062000e7882620013f5565b600482019050919050565b600062000e92600d83620011a1565b915062000e9f826200141e565b602082019050919050565b62000eb58162001226565b82525050565b62000ec68162001226565b82525050565b62000ee162000edb8262001226565b62001327565b82525050565b600062000ef5828562000d32565b60048201915062000f07828462000ecc565b6020820191508190509392505050565b600062000f25828462000d4d565b915081905092915050565b600062000f3d8262000e5c565b9150819050919050565b600060208201905062000f5e600083018462000cb7565b92915050565b6000604082019050818103600083015262000f80818562000cc8565b9050818103602083015262000f96818462000cc8565b90509392505050565b600060208201905062000fb6600083018462000d84565b92915050565b600060408201905062000fd3600083018562000d95565b62000fe2602083018462000ebb565b9392505050565b6000602082019050818103600083015262001005818462000da6565b905092915050565b60006020820190508181036000830152620010288162000de7565b9050919050565b600060208201905081810360008301526200104a8162000e0e565b9050919050565b600060208201905081810360008301526200106c8162000e83565b9050919050565b60006020820190506200108a600083018462000ebb565b92915050565b6000606082019050620010a7600083018462000ebb565b8181036020830152620010ba8162000e35565b90508181036040830152620010cf8162000e35565b905092915050565b6000620010e3620010f6565b9050620010f18282620012e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156200111e576200111d62001360565b5b62001129826200138f565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000620011bf8262001206565b9050919050565b6000620011d38262001206565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006200123d8262001244565b9050919050565b6000620012518262001206565b9050919050565b6000620012658262001226565b9050919050565b82818337600083830152505050565b60005b838110156200129b5780820151818401526020810190506200127e565b83811115620012ab576000848401525b50505050565b60006002820490506001821680620012ca57607f821691505b60208210811415620012e157620012e062001331565b5b50919050565b620012f2826200138f565b810181811067ffffffffffffffff8211171562001314576200131362001360565b5b80604052505050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45727243616c6c00000000000000000000000000000000000000000000000000600082015250565b7f45727244656c656761746543616c6c0000000000000000000000000000000000600082015250565b50565b7ff851a44000000000000000000000000000000000000000000000000000000000600082015250565b7f45727253746174696343616c6c00000000000000000000000000000000000000600082015250565b6200145281620011b2565b81146200145e57600080fd5b50565b6200146c81620011c6565b81146200147857600080fd5b50565b620014868162001226565b81146200149257600080fd5b5056fe608060405234801561001057600080fd5b5060405161070a38038061070a8339818101604052810190610032919061019d565b8060009080519060200190610048929190610092565b5061071a600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610339565b82805461009e90610267565b90600052602060002090601f0160209004810192826100c05760008555610107565b82601f106100d957805160ff1916838001178555610107565b82800160010185558215610107579182015b828111156101065782518255916020019190600101906100eb565b5b5090506101149190610118565b5090565b5b80821115610131576000816000905550600101610119565b5090565b600061014861014384610203565b6101de565b90508281526020810184848401111561016057600080fd5b61016b848285610234565b509392505050565b600082601f83011261018457600080fd5b8151610194848260208601610135565b91505092915050565b6000602082840312156101af57600080fd5b600082015167ffffffffffffffff8111156101c957600080fd5b6101d584828501610173565b91505092915050565b60006101e86101f9565b90506101f48282610299565b919050565b6000604051905090565b600067ffffffffffffffff82111561021e5761021d6102f9565b5b61022782610328565b9050602081019050919050565b60005b83811015610252578082015181840152602081019050610237565b83811115610261576000848401525b50505050565b6000600282049050600182168061027f57607f821691505b60208210811415610293576102926102ca565b5b50919050565b6102a282610328565b810181811067ffffffffffffffff821117156102c1576102c06102f9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6103c2806103486000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde0314610051578063262a9dff1461006f578063d5dcf1271461008d578063f851a440146100a9575b600080fd5b6100596100c7565b604051610066919061023b565b60405180910390f35b610077610155565b604051610084919061025d565b60405180910390f35b6100a760048036038101906100a291906101a0565b61015b565b005b6100b1610165565b6040516100be9190610220565b60405180910390f35b600080546100d490610303565b80601f016020809104026020016040519081016040528092919081815260200182805461010090610303565b801561014d5780601f106101225761010080835404028352916020019161014d565b820191906000526020600020905b81548152906001019060200180831161013057829003601f168201915b505050505081565b60015481565b8060018190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061019a81610375565b92915050565b6000602082840312156101b257600080fd5b60006101c08482850161018b565b91505092915050565b6101d281610294565b82525050565b60006101e382610278565b6101ed8185610283565b93506101fd8185602086016102d0565b61020681610364565b840191505092915050565b61021a816102c6565b82525050565b600060208201905061023560008301846101c9565b92915050565b6000602082019050818103600083015261025581846101d8565b905092915050565b60006020820190506102726000830184610211565b92915050565b600081519050919050565b600082825260208201905092915050565b600061029f826102a6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156102ee5780820151818401526020810190506102d3565b838111156102fd576000848401525b50505050565b6000600282049050600182168061031b57607f821691505b6020821081141561032f5761032e610335565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61037e816102c6565b811461038957600080fd5b5056fea2646970667358221220127bee8716ad61428ed050437928dcd717e77f3f780840cc449f28c7352cfe4364736f6c63430008040033a2646970667358221220add4b4ed30f8f95c4d28701b49ca685ab88c400ced02b916f20bb4630ad0719564736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
